/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package passwordtest;

import java.awt.Color;
import java.awt.Font;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import javax.swing.JTextField;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;


/**
 *
 * @author Huy
 */
public class PasswordTestForm2 extends javax.swing.JFrame {

    private String password;
    public String weak = "Weak";
    public String strong = "Strong";
    public String score = "Score";
    String logEntry;
    public final String strongFilePath = "strong.passwords.txt";
    public final String weakFilePath = "weak.passwords.txt";
    ArrayList<String> listOfStrongPasswords = new ArrayList<>();
    ArrayList<String> listOfWeakPasswords = new ArrayList<>();
        
    Passwords strongPasswords = new Passwords(strongFilePath);
    Passwords weakPasswords = new Passwords(weakFilePath);
    
    String _initials;
    int _age;
    String _gender;
    
    Font font = new Font("Tahoma", Font.BOLD, 15);
    Font statusFont = new Font("Tahoma", Font.BOLD, 11);
    
    Date printDate = new Date();
    SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
    
    public int clicks;
    public int correct;
    public int indicates;
    Log strongClicks = new Log(clicks);
    Log weakClicks = new Log(clicks);
    Log correctAnswers = new Log(correct);
    Log indicator = new Log(indicates);
    Log log = new Log(0);
    
    private int rounds = 0;   
    /**
     * Creates new form PasswordTestForm2
     */
    public PasswordTestForm2(String initials, int age, String gender) {
        initComponents();
        log.setInfo(initials, age, gender);
        
        secondExitButton.setVisible(false);
        StyledDocument doc = mainTextPane.getStyledDocument();
        SimpleAttributeSet center = new SimpleAttributeSet();
        StyleConstants.setAlignment(center, StyleConstants.ALIGN_CENTER);
        doc.setParagraphAttributes(0, doc.getLength(), center, false);
        
        listOfStrongPasswords.addAll(strongPasswords.getPasswords());
        listOfWeakPasswords.addAll(weakPasswords.getPasswords());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstButton = new javax.swing.JButton();
        secondButton = new javax.swing.JButton();
        secondExitButton = new javax.swing.JButton();
        statusBarTextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        mainTextPane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        firstButton.setText("Start");
        firstButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstButtonActionPerformed(evt);
            }
        });

        secondButton.setText("Exit");
        secondButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondButtonActionPerformed(evt);
            }
        });

        secondExitButton.setText("Exit");
        secondExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondExitButtonActionPerformed(evt);
            }
        });

        statusBarTextField.setEditable(false);
        statusBarTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        mainTextPane.setText("Instructions");
        jScrollPane2.setViewportView(mainTextPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusBarTextField)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(102, Short.MAX_VALUE)
                .addComponent(firstButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(secondButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(secondExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secondButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(secondExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusBarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void firstButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstButtonActionPerformed
            if (firstButton.getText().equals("Strong")) {
                rounds++;
                logEntry = "Strong button clicked";
                if(rounds < 10) {
                    if(indicator.getPassword() == 0) {
                        logEntry += "\tcorrect"; 
                        log.write(logEntry);
                    } else {
                        logEntry += "\tincorrect";
                        log.write(logEntry);
                    }
                    indicator.setPassword(displayRandomPassword());
                    displayStatus();
                } else {
                    displayStatus();
                    endProgram();
                }
            } else {
                indicator.setPassword(displayRandomPassword());
                firstButton.setText("Strong");
                secondButton.setText("Weak");
                secondExitButton.setVisible(true);
                displayStatus();
            }
    }//GEN-LAST:event_firstButtonActionPerformed

    private void secondButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondButtonActionPerformed
            if (secondButton.getText().equals("Weak")) {
                rounds++;
                logEntry = "Weak button clicked";
                log.write(logEntry);
                if(rounds < 10) {
                    if(indicator.getPassword() == 1) {
                        logEntry += "\tcorrect"; 
                        log.write(logEntry);
                    } else {
                        logEntry += "\tincorrect";
                        log.write(logEntry);
                    }
                    indicator.setPassword(displayRandomPassword());
                    displayStatus();
                } else {
                    displayStatus();                    
                    endProgram();
                }
            } else {
                System.exit(0);
            }
    }//GEN-LAST:event_secondButtonActionPerformed

    private void secondExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondExitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_secondExitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasswordTestForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasswordTestForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasswordTestForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordTestForm2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        String set1 ="";
        int set2 = 0;
        String set3 = "";
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PasswordTestForm2(set1, set2, set3).setVisible(true);
            }
        }); 
    }

    private String getRandomPassword(ArrayList<String> listOfPasswords) {
        return listOfPasswords.get(generateRandNum(listOfPasswords.size()));
    }
    
    private int generateRandNum(int max) {
        Random rand = new Random();
        
        return rand.nextInt(max);
    }
    
    private int displayRandomPassword() {
        int strengthIndicator = generateRandNum(2);
        mainTextPane.setFont(font);
        
        if(strengthIndicator == 0) {
            password = getRandomPassword(listOfStrongPasswords);
            mainTextPane.setText("\n\n\n" + password);
            listOfStrongPasswords.remove(password);
        } else {
            password = getRandomPassword(listOfWeakPasswords);
            mainTextPane.setText("\n\n\n" + password);
            listOfWeakPasswords.remove(password);
        }
        
        return strengthIndicator;
    }
    
    private void displayStatus() {
        statusBarTextField.setForeground(Color.WHITE);
        statusBarTextField.setText("Status: " + rounds + "/10");
        if(rounds < 10) {    
            statusBarTextField.setBackground(Color.RED);
        } else {
            statusBarTextField.setForeground(Color.BLACK);
            statusBarTextField.setBackground(Color.GREEN);
        }
    }
    
    private void endProgram() {
        mainTextPane.setText("\n\n\n Thank you for your participation!");
        firstButton.setEnabled(false);
        secondButton.setEnabled(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton firstButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane mainTextPane;
    private javax.swing.JButton secondButton;
    private javax.swing.JButton secondExitButton;
    private javax.swing.JTextField statusBarTextField;
    // End of variables declaration//GEN-END:variables
}
